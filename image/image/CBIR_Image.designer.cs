#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18449
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace image
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="image")]
	public partial class CBIR_ImageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertImage_Category(Image_Category instance);
    partial void UpdateImage_Category(Image_Category instance);
    partial void DeleteImage_Category(Image_Category instance);
    partial void InsertImage_Color(Image_Color instance);
    partial void UpdateImage_Color(Image_Color instance);
    partial void DeleteImage_Color(Image_Color instance);
    partial void InsertImage_info(Image_info instance);
    partial void UpdateImage_info(Image_info instance);
    partial void DeleteImage_info(Image_info instance);
    partial void InsertImage_Museum(Image_Museum instance);
    partial void UpdateImage_Museum(Image_Museum instance);
    partial void DeleteImage_Museum(Image_Museum instance);
    partial void InsertImage_Period(Image_Period instance);
    partial void UpdateImage_Period(Image_Period instance);
    partial void DeleteImage_Period(Image_Period instance);
    partial void InsertImage_Shape(Image_Shape instance);
    partial void UpdateImage_Shape(Image_Shape instance);
    partial void DeleteImage_Shape(Image_Shape instance);
    #endregion
		
		public CBIR_ImageDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["imageConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CBIR_ImageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CBIR_ImageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CBIR_ImageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CBIR_ImageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Image_Category> Image_Category
		{
			get
			{
				return this.GetTable<Image_Category>();
			}
		}
		
		public System.Data.Linq.Table<Image_Color> Image_Color
		{
			get
			{
				return this.GetTable<Image_Color>();
			}
		}
		
		public System.Data.Linq.Table<Image_info> Image_info
		{
			get
			{
				return this.GetTable<Image_info>();
			}
		}
		
		public System.Data.Linq.Table<Image_Museum> Image_Museum
		{
			get
			{
				return this.GetTable<Image_Museum>();
			}
		}
		
		public System.Data.Linq.Table<Image_Period> Image_Period
		{
			get
			{
				return this.GetTable<Image_Period>();
			}
		}
		
		public System.Data.Linq.Table<Image_Shape> Image_Shape
		{
			get
			{
				return this.GetTable<Image_Shape>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image_Category")]
	public partial class Image_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Intro;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    #endregion
		
		public Image_Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)")]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image_Color")]
	public partial class Image_Color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Red;
		
		private string _Green;
		
		private string _Blue;
		
		private string _Hsv;
		
		private string _Distant;
		
		private string _RGB;
		
		private EntitySet<Image_info> _Image_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRedChanging(string value);
    partial void OnRedChanged();
    partial void OnGreenChanging(string value);
    partial void OnGreenChanged();
    partial void OnBlueChanging(string value);
    partial void OnBlueChanged();
    partial void OnHsvChanging(string value);
    partial void OnHsvChanged();
    partial void OnDistantChanging(string value);
    partial void OnDistantChanged();
    partial void OnRGBChanging(string value);
    partial void OnRGBChanged();
    #endregion
		
		public Image_Color()
		{
			this._Image_info = new EntitySet<Image_info>(new Action<Image_info>(this.attach_Image_info), new Action<Image_info>(this.detach_Image_info));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Red", DbType="VarChar(MAX)")]
		public string Red
		{
			get
			{
				return this._Red;
			}
			set
			{
				if ((this._Red != value))
				{
					this.OnRedChanging(value);
					this.SendPropertyChanging();
					this._Red = value;
					this.SendPropertyChanged("Red");
					this.OnRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Green", DbType="VarChar(MAX)")]
		public string Green
		{
			get
			{
				return this._Green;
			}
			set
			{
				if ((this._Green != value))
				{
					this.OnGreenChanging(value);
					this.SendPropertyChanging();
					this._Green = value;
					this.SendPropertyChanged("Green");
					this.OnGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blue", DbType="VarChar(MAX)")]
		public string Blue
		{
			get
			{
				return this._Blue;
			}
			set
			{
				if ((this._Blue != value))
				{
					this.OnBlueChanging(value);
					this.SendPropertyChanging();
					this._Blue = value;
					this.SendPropertyChanged("Blue");
					this.OnBlueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hsv", DbType="VarChar(MAX)")]
		public string Hsv
		{
			get
			{
				return this._Hsv;
			}
			set
			{
				if ((this._Hsv != value))
				{
					this.OnHsvChanging(value);
					this.SendPropertyChanging();
					this._Hsv = value;
					this.SendPropertyChanged("Hsv");
					this.OnHsvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distant", DbType="VarChar(MAX)")]
		public string Distant
		{
			get
			{
				return this._Distant;
			}
			set
			{
				if ((this._Distant != value))
				{
					this.OnDistantChanging(value);
					this.SendPropertyChanging();
					this._Distant = value;
					this.SendPropertyChanged("Distant");
					this.OnDistantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGB", DbType="VarChar(MAX)")]
		public string RGB
		{
			get
			{
				return this._RGB;
			}
			set
			{
				if ((this._RGB != value))
				{
					this.OnRGBChanging(value);
					this.SendPropertyChanging();
					this._RGB = value;
					this.SendPropertyChanged("RGB");
					this.OnRGBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_Color_Image_info", Storage="_Image_info", ThisKey="ID", OtherKey="ColorID")]
		public EntitySet<Image_info> Image_info
		{
			get
			{
				return this._Image_info;
			}
			set
			{
				this._Image_info.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Image_info(Image_info entity)
		{
			this.SendPropertyChanging();
			entity.Image_Color = this;
		}
		
		private void detach_Image_info(Image_info entity)
		{
			this.SendPropertyChanging();
			entity.Image_Color = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image_info")]
	public partial class Image_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Url;
		
		private string _Tag;
		
		private string _Intro;
		
		private System.Nullable<int> _CategoryID;
		
		private System.Nullable<int> _MuseumID;
		
		private System.Nullable<int> _PeriodID;
		
		private System.Nullable<int> _ColorID;
		
		private System.Nullable<int> _ShapeID;
		
		private EntityRef<Image_Color> _Image_Color;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnMuseumIDChanging(System.Nullable<int> value);
    partial void OnMuseumIDChanged();
    partial void OnPeriodIDChanging(System.Nullable<int> value);
    partial void OnPeriodIDChanged();
    partial void OnColorIDChanging(System.Nullable<int> value);
    partial void OnColorIDChanged();
    partial void OnShapeIDChanging(System.Nullable<int> value);
    partial void OnShapeIDChanged();
    #endregion
		
		public Image_info()
		{
			this._Image_Color = default(EntityRef<Image_Color>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(50)")]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)")]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MuseumID", DbType="Int")]
		public System.Nullable<int> MuseumID
		{
			get
			{
				return this._MuseumID;
			}
			set
			{
				if ((this._MuseumID != value))
				{
					this.OnMuseumIDChanging(value);
					this.SendPropertyChanging();
					this._MuseumID = value;
					this.SendPropertyChanged("MuseumID");
					this.OnMuseumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodID", DbType="Int")]
		public System.Nullable<int> PeriodID
		{
			get
			{
				return this._PeriodID;
			}
			set
			{
				if ((this._PeriodID != value))
				{
					this.OnPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodID = value;
					this.SendPropertyChanged("PeriodID");
					this.OnPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="Int")]
		public System.Nullable<int> ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					if (this._Image_Color.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShapeID", DbType="Int")]
		public System.Nullable<int> ShapeID
		{
			get
			{
				return this._ShapeID;
			}
			set
			{
				if ((this._ShapeID != value))
				{
					this.OnShapeIDChanging(value);
					this.SendPropertyChanging();
					this._ShapeID = value;
					this.SendPropertyChanged("ShapeID");
					this.OnShapeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_Color_Image_info", Storage="_Image_Color", ThisKey="ColorID", OtherKey="ID", IsForeignKey=true)]
		public Image_Color Image_Color
		{
			get
			{
				return this._Image_Color.Entity;
			}
			set
			{
				Image_Color previousValue = this._Image_Color.Entity;
				if (((previousValue != value) 
							|| (this._Image_Color.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image_Color.Entity = null;
						previousValue.Image_info.Remove(this);
					}
					this._Image_Color.Entity = value;
					if ((value != null))
					{
						value.Image_info.Add(this);
						this._ColorID = value.ID;
					}
					else
					{
						this._ColorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Image_Color");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image_Museum")]
	public partial class Image_Museum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Intro;
		
		private string _WebSite;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnWebSiteChanging(string value);
    partial void OnWebSiteChanged();
    #endregion
		
		public Image_Museum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)")]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="VarChar(MAX)")]
		public string WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image_Period")]
	public partial class Image_Period : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Intro;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    #endregion
		
		public Image_Period()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)")]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image_Shape")]
	public partial class Image_Shape : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<double> _s1;
		
		private System.Nullable<double> _s2;
		
		private System.Nullable<double> _s3;
		
		private System.Nullable<double> _s4;
		
		private System.Nullable<double> _s5;
		
		private System.Nullable<double> _s6;
		
		private System.Nullable<double> _s7;
		
		private System.Nullable<double> _Distant;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Ons1Changing(System.Nullable<double> value);
    partial void Ons1Changed();
    partial void Ons2Changing(System.Nullable<double> value);
    partial void Ons2Changed();
    partial void Ons3Changing(System.Nullable<double> value);
    partial void Ons3Changed();
    partial void Ons4Changing(System.Nullable<double> value);
    partial void Ons4Changed();
    partial void Ons5Changing(System.Nullable<double> value);
    partial void Ons5Changed();
    partial void Ons6Changing(System.Nullable<double> value);
    partial void Ons6Changed();
    partial void Ons7Changing(System.Nullable<double> value);
    partial void Ons7Changed();
    partial void OnDistantChanging(System.Nullable<double> value);
    partial void OnDistantChanged();
    #endregion
		
		public Image_Shape()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s1", DbType="Float")]
		public System.Nullable<double> s1
		{
			get
			{
				return this._s1;
			}
			set
			{
				if ((this._s1 != value))
				{
					this.Ons1Changing(value);
					this.SendPropertyChanging();
					this._s1 = value;
					this.SendPropertyChanged("s1");
					this.Ons1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s2", DbType="Float")]
		public System.Nullable<double> s2
		{
			get
			{
				return this._s2;
			}
			set
			{
				if ((this._s2 != value))
				{
					this.Ons2Changing(value);
					this.SendPropertyChanging();
					this._s2 = value;
					this.SendPropertyChanged("s2");
					this.Ons2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s3", DbType="Float")]
		public System.Nullable<double> s3
		{
			get
			{
				return this._s3;
			}
			set
			{
				if ((this._s3 != value))
				{
					this.Ons3Changing(value);
					this.SendPropertyChanging();
					this._s3 = value;
					this.SendPropertyChanged("s3");
					this.Ons3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s4", DbType="Float")]
		public System.Nullable<double> s4
		{
			get
			{
				return this._s4;
			}
			set
			{
				if ((this._s4 != value))
				{
					this.Ons4Changing(value);
					this.SendPropertyChanging();
					this._s4 = value;
					this.SendPropertyChanged("s4");
					this.Ons4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s5", DbType="Float")]
		public System.Nullable<double> s5
		{
			get
			{
				return this._s5;
			}
			set
			{
				if ((this._s5 != value))
				{
					this.Ons5Changing(value);
					this.SendPropertyChanging();
					this._s5 = value;
					this.SendPropertyChanged("s5");
					this.Ons5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s6", DbType="Float")]
		public System.Nullable<double> s6
		{
			get
			{
				return this._s6;
			}
			set
			{
				if ((this._s6 != value))
				{
					this.Ons6Changing(value);
					this.SendPropertyChanging();
					this._s6 = value;
					this.SendPropertyChanged("s6");
					this.Ons6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s7", DbType="Float")]
		public System.Nullable<double> s7
		{
			get
			{
				return this._s7;
			}
			set
			{
				if ((this._s7 != value))
				{
					this.Ons7Changing(value);
					this.SendPropertyChanging();
					this._s7 = value;
					this.SendPropertyChanged("s7");
					this.Ons7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distant", DbType="Float")]
		public System.Nullable<double> Distant
		{
			get
			{
				return this._Distant;
			}
			set
			{
				if ((this._Distant != value))
				{
					this.OnDistantChanging(value);
					this.SendPropertyChanging();
					this._Distant = value;
					this.SendPropertyChanged("Distant");
					this.OnDistantChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
